package org.daisleyharrison.security.samples.spring.microservices.vunerabilityservice;

import org.daisleyharrison.security.common.models.datastore.DatastoreCollection;
import org.daisleyharrison.security.common.spi.DatastoreServiceProvider;
import org.daisleyharrison.security.samples.spring.microservices.shared.security.EnableDHSecurity;
import org.daisleyharrison.security.samples.spring.microservices.vunerabilityservice.models.cve.Vulnerability;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;

import io.jsondb.JsonDBTemplate;

@SpringBootApplication
@EnableAutoConfiguration(exclude = {org.springframework.boot.autoconfigure.gson.GsonAutoConfiguration.class})
@EnableDHSecurity
public class Application {


	@Value("${json.db.files.location}")
    private String dbFilesLocation;

    @Value("${json.db.scan.package}")
    private String dbScanPackage;	private JsonDBTemplate jsonDb;


	@Autowired
	DatastoreServiceProvider datastoreService;
	private DatastoreCollection<Vulnerability> vulnerabilityCollection;

	@Bean
	public DatastoreCollection<Vulnerability> vulnerabilityCollection() throws Exception {
		if(vulnerabilityCollection == null){
			vulnerabilityCollection = datastoreService.openCollection(Vulnerability.class, "id");
		}
		return vulnerabilityCollection;
	}

	public static void main(String[] args) {
		SpringApplication.run(Application.class, args);
	}

}
