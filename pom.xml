<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.daisleyharrison</groupId>
  <artifactId>security</artifactId>
  <version>1.0-SNAPSHOT</version>

  <name>security</name>
  <packaging>pom</packaging>
  <properties>
		<java.version>12</java.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>12</maven.compiler.source>
    <maven.compiler.target>12</maven.compiler.target>
    <jersey.version>2.28</jersey.version>
    <org.slf4j.version>1.7.16</org.slf4j.version>
    <com.fasterxml.jackson.core.version>2.9.4</com.fasterxml.jackson.core.version>

    <main-class>org.daisleyharrison.security.service.Main</main-class>
    <base-dir>c:\projects\org\daisleyharrison\security</base-dir>
    <debug>true</debug>
</properties>

  <dependencies>
  </dependencies>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
          <configuration>
              <source>${maven.compiler.source}</source>
              <target>${maven.compiler.target}</target>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
          <configuration>
            <main>${main-class}</main>
          </configuration>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.2.1</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${main-class}</mainClass>
                </configuration>
            </plugin>
            <plugin>
                  <groupId>org.apache.maven.plugins</groupId>
                  <artifactId>maven-enforcer-plugin</artifactId>
                  <version>1.4.1</version>
                  <configuration>
                      <rules><dependencyConvergence/></rules>
                  </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
              <executions>
                <execution>
                  <id>copy-dependencies</id>
                  <phase>package</phase>
                  <goals>
                    <goal>copy-dependencies</goal>
                  </goals>
                  <configuration>
                    <outputDirectory>${project.build.directory}/alternateLocation</outputDirectory>
                    <overWriteReleases>false</overWriteReleases>
                    <overWriteSnapshots>false</overWriteSnapshots>
                    <overWriteIfNewer>true</overWriteIfNewer>
                  </configuration>
                </execution>
              </executions>
          </plugin>        
          <plugin>
            <groupId>com.github.jeluard</groupId>
            <artifactId>plantuml-maven-plugin</artifactId>
            <version>1.2</version>
            <configuration>
              <sourceFiles>
                <directory>${basedir}</directory>
                <includes>
                  <include>src/main/plantuml/**/*.txt</include>
                </includes>
              </sourceFiles>
            </configuration>
            <dependencies>
              <dependency>
                <groupId>net.sourceforge.plantuml</groupId>
                <artifactId>plantuml</artifactId>
                <version>7999</version>
              </dependency>
            </dependencies>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <modules>
    <module>common</module>
    <module>test-utilities</module>
    <module>data-models</module>
    <module>configuration-service</module>
    <module>jose4j-extensions</module>
    <module>key-service</module>
    <module>vault-service</module>
    <module>cypher-service</module>
    <module>datastore-service-jsondb</module>
    <module>datastore-service-mongodb</module>
    <module>tokenizer-service</module>
    <module>poptoken-factory</module>
    <module>authorization-service</module>
    <module>profile-service</module>
    <module>openid-service</module>
    <module>jersey-service</module>
    <module>spring</module>
    <module>spring-daisleyharrison-security-dependencies</module>
    <module>yaml</module>
    <module>samples</module>
  </modules>
</project>